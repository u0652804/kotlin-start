## reference

 - https://developer.android.com/codelabs/basic-android-kotlin-training-lists#2
 - for map : https://ithelp.ithome.com.tw/articles/10247666

## Array 

### iteator with index

    val arr = IntArray(5) { it+1 }
    for(i in 0..arr.size-1) {
        print("${arr[i]} ")
    } 
    
    for(i in 0 until arr.size) {
        print("${arr.get(i)} ")
    }
    
    for(i in arr.indices) {
        print("${arr[i]} ")
    }
    
    var idx = 0
    while(idx < arr.size) { 
        print("${arr[idx]}") 
        idx ++
    }

### iteator 

    arr.forEach { print("$it ") }
    for(e in arr) { print("$e ") }

### empty array

    val arr1 = IntArray(0)
    val arr2 = emptyArray<Int>()

### vaild*

    // case 1
    val arr1 = IntArray(5) {0}
    val arr2 = IntArray(5) {1}
    arr1 = arr2 // error : val cannot be reassigned(val arr is immutable)
    arr1[0] = arr2[0] // pass : element is mutable
    
    // case 2
    var arr3 = IntArray(5) {0}
    arr3 = arr2 // pass (var arr is mutable)
    
    // case 3
    val arr4 = Array(5) {2}
    arr3 = arr4 // error*

## list

### immutableList
    
    var list = listOf(1, 2, 3)
    for(i in 0..list.size-1) { print("${list.get(i)} ") }
    for(e in list) { print("$e ") }
    list.forEach{ print("${it*2} ") }
    print("list: " + list)
    print("list: $list")
    
### mutableList

    val mList = mutableListOf<Int>()
    mList.add(1)
    print(mList)
    mList.addAll(list)
    print(mList)

## set

    val s1 = setOf(1, 2)
    val s2 = mutableSetOf(1)
    s2.addAll(s1)
    println("s1: $s1, s2: $s2 ")
    println("s1 contains 1: ${s1.contains(1)}, s1 contains 3: ${s1.contains(3)}")
 
    s2.remove(1)
    println(s2)
    
    s2.clear()
    println(s2)
    
    s2.add(5)
    println(s2)

# map

    val m = mutableMapOf(1 to "a")
    println(m)
    m[2] = "b"
    println(m)
    m.put(3, "c")
    println(m)
    println(m.keys)
    println(m.values)
    for(k in m.keys)
        print(k)
        
    m.remove(1)
    println(m)
    
    m.clear()
    println(m)
